#! /bin/sh
# Fancy colors used to beautify the output a bit.
#
NORMAL="\033[0m"
BOLD="\033[1m"
RED="\033[91m"
YELLOW="\033[93m"
GREEN="\033[92m"

# MD5 of latest waf-mini.tar.bz2
MD5=64b123a3e870d4d31c1372601740aee5 

# Checks for Python interpreter. Honours $PYTHON if set. Stores path to
# interpreter in $PYTHON.
#
checkPython()
{
	if [ -z $PYTHON ]; then
	  PYTHON=`which python 2>/dev/null`
	fi
	echo -n "Checking for Python                :  "
	if [ ! -x "$PYTHON" ]; then
	  echo -e $GREEN"not found!"$NORMAL
	  echo "Please make sure that the Python interpreter is available in your PATH"
	  echo "or invoke configure using the PYTHON flag, e.g."
	  echo "$ PYTHON=/usr/local/bin/python configure"
	  exit 1
	fi
	echo -e $GREEN"$PYTHON"$NORMAL
}

# Check if configure is invoked from user made 'build' dir
checkBuild()
{
    if [ ! -f "wscript" ]; then
	if [ -f "../wscript" ]; then
	    WAF_DIR=".."
	    BLD_DIR=$(pwd)
	else
	    echo "No wscript file found!" && exit 1
	fi
    else
	WAF_DIR="."
	BLD_DIR="."
    fi
}


# Checks for Waf. Honours $WAF if set. Stores path to 'waf' in $WAF.
# Requires that $PYTHON is set.
#
checkWaf()
{
	echo -n "Checking for Waf                   :  "
	CBD=$(pwd)
	if [ -z $WAF ]; then
	  WAF=`which waf 2>/dev/null`
	fi
	if [ ! -e "$WAF" ]; then
	  WAF=$WAF_DIR/waf.py
	fi
	if [ ! -e "$WAF" ]; then
	  echo -e $BOLD"not found, will use mini distribution."$NORMAL
	  cd $WAF_DIR
	  tar xjf admin/waf-mini.tar.bz2
	else
	  cd $WAF_DIR
	  if ! md5sum --status -c admin/md5.sum; then
	      echo -e $BOLD"new version of mini distribution."$NORMAL
	      tar xjf admin/waf-mini.tar.bz2
	  fi
	  echo -e $GREEN"$WAF"$NORMAL
	fi
	md5sum admin/waf-mini.tar.bz2 > admin/md5.sum  # store md5sum
	MD5C=$WAF_DIR/admin/md5.sum
	WAFMINI=$WAF_DIR/admin/waf-mini.tar.bz2
	cd $CBD
}

# Generates a Makefile. Requires that $WAF is set.
#
generateMakefile()
{
	cat > Makefile << EOF
all: $MD5C
	@$WAF build

# it is also possible to use
# @$WAF -j4

install: md5c
	@$WAF install

clean:
	@$WAF clean

uninstall:
	@$WAF uninstall

dist: $MD5C
	@$WAF dist

distclean:
	$WAF distclean

$MD5C: $WAFMINI
	./config.status --recheck

EOF
	cat > config.status <<EOF
if [ "\$1" == "--recheck" ]; then
  ../configure $PARS
else
  echo "Nothing to create."
fi

EOF
	chmod a+x config.status
}

checkBuild
checkPython
checkWaf

if [[ "$1" == "--help" ]]; then
   $WAF --help
   exit
fi

PARS=$@
generateMakefile
#echo "calling waf with parameters:"
#echo "$WAF $@ configure "
$WAF $@ configure 

