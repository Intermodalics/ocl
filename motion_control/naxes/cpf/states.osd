StateMachine Default
{

  var bool calibrate_offsets     = true
  var bool move_to               = true

  const double pi = 3.14159265358979

  initial state StartRobotState {
    entry {
      do Kuka160.prepareForUse()
    }
    exit {
      do Kuka160.unlockAllAxes()
      do Kuka160.startAllAxes()
    }
    transitions {
      select CalibrateOffsetsState
    }
  }



  state CalibrateOffsetsState {
    preconditions {
      if (calibrate_offsets == false) then
        select MoveToState
    }
    entry {
      do nAxesSensorPos.start()
      do nAxesGeneratorPos.start()
      do nAxesControllerPos.start()
      do nAxesEffectorVel.start()
      do programs.CalibrateOffsetsProg.start()
    }
    exit {
      do nAxesSensorPos.stop()
      do nAxesGeneratorPos.stop()
      do nAxesControllerPos.stop()
      do nAxesEffectorVel.stop()
    }
    transitions {
      if !programs.CalibrateOffsetsProg.isRunning then
       select MoveToState
    }
  }      

  state MoveToState {
    preconditions {
      if (move_to == false) then
        select StopRobotState
    }
    entry {
      var double position0 = Kuka160.positionValue0.Get()      
      var double position1 = Kuka160.positionValue1.Get()      
      var double position2 = Kuka160.positionValue2.Get()      
      var double position3 = Kuka160.positionValue3.Get()      
      var double position4 = Kuka160.positionValue4.Get()      
      var double position5 = Kuka160.positionValue5.Get() 

      set position0 = position0 + pi/4
      set position3 = position3 + pi/2
      set position4 = position4 + pi/4
      set position5 = position5 + pi/2
      do MoveToJoint(position0, position1, position2, position3, position4, position5)
      set position0 = position0 - pi/4
      set position3 = position3 - pi/2
      set position4 = position4 - pi/4
      set position5 = position5 - pi/2
      do MoveToJoint(position0, position1, position2, position3, position4, position5)
    }
    exit {
    }
    transitions {
      select StopRobotState
    }
  }


  final state StopRobotState {
    entry {
        do Kuka160.stopAllAxes()
        do Kuka160.lockAllAxes()
    }
    exit {
      do Kuka160.prepareForShutdown()
    }
  }
}

RootMachine Default Default
