#+TITLE:	Lua RTT API changes
#+AUTHOR:	Markus Klotzbuecher
#+EMAIL:	markus.klotzbuecher@mech.kuleuven.be
#+DATE:		2010-09-13 Mon
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:	en
#+OPTIONS:	H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:	TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT:	view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:
#+STYLE:	<link rel="stylesheet" type="text/css" href="css/stylesheet.css" />

#+STARTUP:	showall
#+STARTUP:	hidestars

*API Changes in the Lua RTT bindings*

 - [2011-04-14 Thu] rttlib: add findpeer function, which searches
   through the tree of peers and if found, returns the TC with the
   given name.

 - [2011-03-18 Fri] Fix the problem of conversions getting broken
   after type aliases were added. Also removed =rttlib.var_is_basic=
   and instead exported the C one as =rtt.Variable.isbasic= method and
   function.

 - [2011-01-25 Tue] Automatically convert rtt Variables to Lua
   types. This gets rid of the problem that RTT and lua types could
   not be directly compared.

 - [2011-01-24 Mon] RTT operations are now called just like methods
   with =tc:operation()= syntax. If there exists a C++ method _and_ a
   RTT Operation with the same name, the operation will be called.

 - [2011-01-24 Mon] added Service.hasOperation and
   TaskContext.hasOperation.

 - [2011-01-19 Wed] added rttlib.mirror(TaskContext, table) which
   creates connected inverse ports of all ports given in table or all
   ports of the TC if that is nil.

 - [2011-01-19 Wed] added port:connect(port)

 - [2010-12-12 Sun] rttlib adds =tc:stat()= operation to print port values

 - [2010-12-06 Mon] add Variable:resize(size) operation

 - [2010-10-21 Thu] add TaskContext:getOperation("name")

 - [2010-10-18 Mon] add =EEHook= execution engine mechanism

 - [2010-10-18 Mon] changes to Port/Property constructors / TC
   "adders". E.g. =rtt.Property.new(type, name, desc)= where name and
   desc are optional. The TaskContext add function now also accepts
   optional name and description: =tc:addPort(port, name, desc)=.

 - [2010-10-18 Mon] =startHook= and =configureHook= return values are
   now really returned by the C++ hook.

 - [2010-10-15 Fri] renamed =getlevel= to =getLogLevel= and =setlevel=
   to =setLogLevel=. Added =logl= function which logs with the
   loglevel given as first (string) argument.

 - [2010-10-15 Fri] moved =Logger= functions to toplevel, they are now
   accessable directly in the rtt table, e.g.: =rtt.log("Hello
   World")=

 - [2010-10-14 Thu] =operation:info()= now returns 5 arguments:
   =name, descr, res_type, arity, argtab=
