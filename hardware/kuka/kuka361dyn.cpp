
#include "kuka361dyn.hpp"

//namespace Orocos
//{
using namespace std;

#define Y_LS {29.0130, -10.9085, -0.2629, 2.6403, -0.0421, 0.0509, 3.0221, 2.4426, 0.0531, -0.2577, -0.2627, 346.7819, -0.2651, 35.4666, 5.6321, 0.9935, 3.2192, 10.7823, 34.2604, 16.9902, 39.1594, 5.4501, 16.1392, -12.7243, -6.1094, 1.9590}
#define Y_LS2 {3.4102, 3.2555, 2.2401, 29.5178, 35.0201, 28.1370, 16.3857, 15.5666, 14.5318, -0.5734, -2.1976, 5.8708} 

kuka361dyn::kuka361dyn():_ddq(6){
	D13 = 0.48;
	g1 = 9.81;
	double y_ls[26] = Y_LS;
	for(int i=0; i<26;i++){
		_y_ls[i]=y_ls[i];
	}
	r3 = 51.44118; 
	l = 0.488;
	r = 0.1;
	double y_ls2[12] = Y_LS2;
	for(int i=0; i<12;i++){
		_y_ls2[i]=y_ls2[i];
	}
}

vector<double> kuka361dyn::fwdyn361(vector<double> &tau, vector<double> &q, vector<double> &dq){
	//Calculate ddq of fist three axes
	t1 = sin(q[2]);
	t2 = D13 * t1;
	t3 = r3 * r3;
	t5 = _y_ls[5] * t3 * _y_ls[15];
	t6 = t2 * t5;
	t8 = cos(q[2]);
	t9 = D13 * t8;
	t11 = _y_ls[6] * t3 * _y_ls[15];
	t12 = t9 * t11;
	t15 = _y_ls[13] * t3 * _y_ls[15];
	t16 = (_y_ls[13] * _y_ls[14]);
	t19 = _y_ls[14] * t3 * _y_ls[15];
	t20 = _y_ls[15] * _y_ls[14];
	t21 = D13 * D13;
	t22 = t1 * t1;
	t23 = t21 * t22;
	t24 = _y_ls[5] * _y_ls[5];
	t25 = t23 * t24;
	t26 = 0.1000e4 * t25;
	t27 = t21 * t1;
	t28 = _y_ls[5] * t8;
	t29 = t28 * _y_ls[6];
	t30 = t27 * t29;
	t31 = 0.2000e4 * t30;
	t33 = _y_ls[5] * r3 * _y_ls[15];
	t34 = t2 * t33;
	t36 = t8 * t8;
	t37 = t21 * t36;
	t38 = _y_ls[6] * _y_ls[6];
	t39 = t37 * t38;
	t40 = 0.1000e4 * t39;
	t42 = _y_ls[6] * r3 * _y_ls[15];
	t43 = t9 * t42;
	t46 = _y_ls[14] * r3 * _y_ls[15];
	t48 = 0.2e1 * t6 + 0.2e1 * t12 + t15 + (1000 * t16) + t19 + t20 - t26 - t31 - 0.2e1 * t34 - t40 - 0.2e1 * t43 - 0.2e1 * t46;
	t49 = t21 * D13;
	t50 = t24 * t49;
	t51 = t50 * t22;
	t52 = q[1] + q[2];
	t53 = sin(t52);
	t54 = t53 * t53;
	t55 = t54 * t8;
	t59 = _y_ls[6] * D13;
	t60 = t1 * t53;
	t61 = t59 * t60;
	t62 = cos(t52);
	t63 = t62 * _y_ls[14];
	t64 = t3 * _y_ls[15];
	t65 = t63 * t64;
	t68 = cos(q[1]);
	t69 = sin(q[1]);
	t70 = t68 * t69;
	t71 = t70 * _y_ls[2];
	t74 = t53 * _y_ls[9];
	t75 = t74 * t69;
	t77 = _y_ls[4] * t3 * _y_ls[15];
	t80 = t74 * t68;
	t81 = _y_ls[3] * D13;
	t82 = t1 * _y_ls[5];
	t83 = t81 * t82;
	t86 = _y_ls[0] * _y_ls[13];
	t89 = _y_ls[9] * _y_ls[9];
	t90 = t54 * t89;
	t92 = t62 * t62;
	t93 = _y_ls[10] * _y_ls[10];
	t94 = t92 * t93;
	t96 = t68 * t68;
	t97 = _y_ls[3] * _y_ls[3];
	t98 = t96 * t97;
	t101 = t69 * t69;
	t102 = _y_ls[4] * _y_ls[4];
	t103 = t101 * t102;
	t106 = t36 * t8;
	t108 = t38 * _y_ls[6];
	t111 = t22 * t1;
	t113 = t24 * _y_ls[5];
	t116 = 0.1000e4 * t51 * t55 * _y_ls[6] - 0.2e1 * t61 * t65 + 0.4e1 * t71 * t46 + 0.2e1 * t75 * t77 + 0.2000e4 * t80 * t83 + 0.1000e4 * t86 * _y_ls[14] - t90 * _y_ls[15] - t94 * _y_ls[15] - 0.1000e4 * t98 * _y_ls[14] - 0.1000e4 * t103 * _y_ls[14] - 0.1000e4 * t49 * t106 * t108 - 0.1000e4 * t49 * t111 * t113;
	t121 = _y_ls[7] * t54;
	t123 = t8 * _y_ls[6];
	t124 = t82 * t123;
	t127 = t62 * _y_ls[10];
	t128 = t127 * _y_ls[13];
	t131 = _y_ls[5] * t49;
	t133 = t53 * t62;
	t137 = t127 * _y_ls[15];
	t140 = t127 * t69;
	t143 = t59 * t8;
	t144 = t54 * _y_ls[13];
	t145 = t144 * _y_ls[14];
	t148 = _y_ls[4] * D13;
	t149 = t148 * t82;
	t152 = t148 * t123;
	t155 = _y_ls[5] * t21;
	t157 = t155 * t36 * t53;
	t158 = t62 * _y_ls[6];
	t159 = r3 * _y_ls[15];
	t164 = t92 * r3 * _y_ls[15];
	t167 = -0.1000e4 * t94 * _y_ls[13] - 0.1000e4 * t90 * _y_ls[13] - 0.2000e4 * t121 * t21 * t124 - 0.2000e4 * t74 * t128 + 0.2000e4 * t131 * t106 * t133 * t38 - 0.2e1 * t74 * t137 + 0.2e1 * t140 * t77 + 0.1000e4 * t143 * t145 - 0.2000e4 * t140 * t149 - 0.2000e4 * t140 * t152 + 0.4e1 * t157 * t158 * t159 + 0.2e1 * t39 * t164;
	t169 = t121 * D13;
	t170 = t123 * t159;
	t173 = _y_ls[5] * D13;
	t174 = t8 * t53;
	t175 = t173 * t174;
	t178 = t173 * t8;
	t179 = t133 * t20;
	t182 = t133 * _y_ls[8];
	t186 = t133 * _y_ls[8] * D13;
	t187 = t82 * t64;
	t190 = t68 * _y_ls[3];
	t195 = _y_ls[3] * t3 * _y_ls[15];
	t200 = t81 * t123;
	t204 = _y_ls[3] * r3 * _y_ls[15];
	t207 = _y_ls[7] * t92;
	t208 = t207 * D13;
	t213 = -0.2e1 * t169 * t170 - 0.2e1 * t175 * t65 - 0.2e1 * t178 * t179 + 0.2e1 * t182 * t15 + 0.4e1 * t186 * t187 + 0.2e1 * t190 * t69 * t77 - 0.2e1 * t80 * t195 - 0.4e1 * t182 * t46 + 0.2000e4 * t80 * t200 + 0.2e1 * t80 * t204 - 0.2e1 * t208 * t187 + 0.1000e4 * t207 * t25;
	t217 = _y_ls[6] * _y_ls[13];
	t221 = t123 * t64;
	t225 = t54 * r3 * _y_ls[15];
	t237 = t82 * t159;
	t240 = t27 * _y_ls[5];
	t247 = t113 * t49;
	t252 = 0.2000e4 * t207 * t21 * t124 + 0.1000e4 * t9 * t217 * _y_ls[14] + 0.4e1 * t186 * t221 + 0.2e1 * t25 * t225 + 0.2e1 * t23 * t24 * t3 * _y_ls[15] - 0.2e1 * t121 * t46 + 0.2e1 * t169 * t221 + t121 * t15 + 0.2e1 * t208 * t237 + 0.4e1 * t240 * t221 - 0.2000e4 * t75 * t149 - 0.2000e4 * t75 * t152 + 0.2000e4 * t247 * t8 * t133 * t22;
	t258 = t92 * t3 * _y_ls[15];
	t268 = _y_ls[4] * r3 * _y_ls[15];
	t273 = _y_ls[1] * t101;
	t276 = _y_ls[0] * _y_ls[14];
	t279 = t74 * t62;
	t284 = t69 * _y_ls[4];
	t285 = t284 * _y_ls[14];
	t292 = -0.2e1 * t25 * t164 + 0.2e1 * t25 * t258 - 0.1000e4 * t121 * t39 - 0.2000e4 * t182 * t25 - 0.2e1 * t208 * t221 - 0.2e1 * t75 * t268 + 0.2e1 * t94 * t159 - 0.1000e4 * t273 * t16 - 0.2e1 * t276 * t159 - 0.2e1 * t279 * _y_ls[10] * t3 * _y_ls[15] + 0.2000e4 * t190 * t285 + 0.4e1 * t279 * _y_ls[10] * r3 * _y_ls[15];
	t293 = t127 * t68;
	t296 = t2 * _y_ls[5];
	t298 = _y_ls[5] * _y_ls[13];
	t310 = _y_ls[6] * _y_ls[15];
	t314 = _y_ls[5] * _y_ls[15];
	t321 = t63 * t159;
	t324 = t131 * t1;
	t329 = 0.2000e4 * t293 * t83 + t296 * t15 + 0.1000e4 * t2 * t298 * _y_ls[14] + 0.2000e4 * t293 * t200 - 0.2e1 * t23 * t24 * r3 * _y_ls[15] + t276 * t64 + t86 * t64 + t9 * t310 * _y_ls[14] + t296 * t19 + t2 * t314 * _y_ls[14] - 0.2e1 * t37 * t38 * r3 * _y_ls[15] + 0.4e1 * t175 * t321 + 0.1000e4 * t324 * t92 * t36 * t38;
	t331 = t92 * _y_ls[14];
	t332 = t331 * t159;
	t335 = t24 * t21;
	t336 = t335 * t174;
	t337 = t62 * t1;
	t350 = t92 * _y_ls[13];
	t351 = t350 * t64;
	t353 = t54 * _y_ls[14];
	t354 = t353 * t159;
	t357 = _y_ls[0] * D13;
	t358 = t357 * t1;
	t361 = t357 * t8;
	t366 = _y_ls[8] * _y_ls[13];
	t370 = -0.2e1 * t296 * t332 - 0.4e1 * t336 * t337 * t64 + t121 * t19 - 0.1000e4 * t324 * t54 * t36 * t38 + 0.2e1 * t37 * t38 * t3 * _y_ls[15] + t296 * t351 + 0.2e1 * t296 * t354 - 0.2e1 * t358 * t33 - 0.2e1 * t361 * t42 + t143 * t15 + t143 * t19 + 0.2000e4 * t133 * t366 * _y_ls[14];
	t371 = _y_ls[1] * t96;
	t372 = t371 * D13;
	t378 = t59 * t1;
	t379 = t133 * t16;
	t384 = _y_ls[8] * _y_ls[15];
	t391 = t70 * _y_ls[2] * D13;
	t398 = _y_ls[0] * t21;
	t404 = 0.2e1 * t372 * t187 + 0.2e1 * t372 * t221 + t371 * t15 - 0.2000e4 * t378 * t379 + 0.2e1 * t182 * t19 + 0.2e1 * t133 * t384 * _y_ls[14] + 0.2000e4 * t71 * t39 + 0.4e1 * t391 * t170 + t371 * t19 - t207 * t15 + 0.2e1 * t293 * t204 - 0.2000e4 * t398 * t1 * t29 - 0.1000e4 * t371 * t25;
	t414 = t62 * _y_ls[13] * t64;
	t433 = t273 * D13;
	t436 = 0.4000e4 * t50 * t36 * t133 * t1 * _y_ls[6] - 0.2e1 * t175 * t414 - t273 * t15 + 0.2e1 * t361 * t11 - 0.4e1 * t186 * t237 - 0.2e1 * t293 * t195 - t90 * t64 - t273 * t19 - 0.2e1 * t143 * t46 + 0.1000e4 * t273 * t25 + 0.2000e4 * t273 * t21 * t124 + 0.2e1 * t433 * t237;
	t460 = -0.2e1 * t372 * t237 - 0.2000e4 * t371 * t21 * t124 - 0.4e1 * t186 * t170 + 0.2e1 * t358 * t5 + 0.4e1 * t336 * t337 * t159 - 0.1000e4 * t371 * t39 - 0.2e1 * t372 * t170 - 0.2e1 * t433 * t187 - t98 * t64 + 0.1000e4 * t371 * t16 + t371 * t20 - t273 * t20;
	t465 = t108 * t49;
	t476 = t22 * t24;
	t479 = t36 * t38;
	t489 = -0.1000e4 * t247 * t111 * t92 - 0.1000e4 * t465 * t106 * t54 + 0.1000e4 * t465 * t106 * t92 + 0.1000e4 * t247 * t111 * t54 - t207 * t20 - 0.1000e4 * t398 * t476 - 0.1000e4 * t398 * t479 + 0.1000e4 * t121 * t16 + t121 * t20 - t103 * t64 - t94 * t64 - 0.1000e4 * t207 * t16;
	t492 = _y_ls[0] * _y_ls[15];
	t511 = _y_ls[6] * t21;
	t513 = t511 * t22 * t53;
	t514 = t62 * _y_ls[5];
	t520 = 0.2e1 * t90 * t159 + t492 * _y_ls[14] - 0.2e1 * t371 * t46 - t207 * t19 - 0.2e1 * t433 * t221 + 0.1000e4 * t207 * t39 + 0.2e1 * t208 * t170 - 0.2e1 * t169 * t237 - 0.1000e4 * t121 * t25 + 0.2e1 * t207 * t46 + 0.4e1 * t61 * t321 - 0.4e1 * t513 * t514 * t64 + 0.2e1 * t273 * t46;
	t530 = t54 * _y_ls[15] * _y_ls[14];
	t532 = t38 * t21;
	t533 = t532 * t60;
	t534 = t62 * t8;
	t540 = t350 * _y_ls[14];
	t543 = t331 * t64;
	t546 = t92 * _y_ls[15] * _y_ls[14];
	t549 = t353 * t64;
	t553 = -0.4e1 * t391 * t187 + 0.2e1 * t433 * t170 + 0.1000e4 * t273 * t39 + t143 * t530 - 0.4e1 * t533 * t534 * t64 - 0.2e1 * t61 * t414 + 0.1000e4 * t296 * t540 + t296 * t543 + t296 * t546 - t296 * t530 - t296 * t549 - 0.4e1 * t391 * t221;
	t588 = _y_ls[2] * _y_ls[15];
	t592 = _y_ls[2] * _y_ls[13];
	t598 = t143 * t549 - 0.2e1 * t378 * t179 + 0.2000e4 * _y_ls[6] * t49 * t111 * t133 * t24 - 0.2000e4 * t178 * t379 - 0.2e1 * t71 * t15 - 0.4000e4 * t133 * _y_ls[8] * t21 * t124 - 0.3000e4 * t49 * t1 * _y_ls[5] * t36 * t38 + 0.4e1 * t513 * t514 * t159 + 0.4000e4 * t38 * t49 * t22 * t133 * t28 - 0.3000e4 * t49 * t22 * t24 * t8 * _y_ls[6] - 0.2e1 * t70 * t588 * _y_ls[14] - 0.2000e4 * t70 * t592 * _y_ls[14] - 0.2e1 * t71 * t19;
	t627 = -0.4e1 * t157 * t158 * t64 - 0.2e1 * t140 * t268 - 0.1000e4 * t296 * t145 + 0.4000e4 * t70 * _y_ls[2] * t21 * t124 + 0.4e1 * t391 * t237 + 0.2000e4 * t71 * t25 - 0.2e1 * t39 * t225 - 0.2e1 * t143 * t354 - t143 * t351 - 0.1000e4 * t143 * t540 - 0.2e1 * t39 * t258 + 0.4e1 * t533 * t534 * t159;
	t638 = t54 * t3 * _y_ls[15];
	t643 = t92 * t8;
	t647 = t144 * t64;
	t657 = 0.2000e4 * t465 * t1 * t133 * t36 - t143 * t543 - 0.4e1 * t240 * t170 - 0.2e1 * t296 * t46 + 0.2e1 * t39 * t638 + 0.2e1 * t143 * t332 - 0.1000e4 * t51 * t643 * _y_ls[6] + t143 * t647 - 0.2000e4 * t182 * t39 + 0.2e1 * t169 * t187 - t296 * t647 - t143 * t546 - 0.2e1 * t25 * t638;
	t662 = 0.1e1 / (t116 + t167 + t213 + t252 + t292 + t329 + t370 + t404 + t436 + t460 + t489 + t520 + t553 + t598 + t627 + t657);
	t664 = dq[1] * dq[1];
	t667 = _y_ls[6] * dq[0];
	t668 = t667 * dq[1];
	t669 = D13 * t68;
	t670 = t669 * t53;
	t673 = D13 * t69;
	t674 = t673 * t62;
	t680 = _y_ls[7] * dq[0];
	t685 = dq[2] * t53;
	t693 = _y_ls[2] * dq[0];
	t700 = _y_ls[8] * dq[0];
	t706 = _y_ls[3] * t664 * t69 - 0.2e1 * t668 * t670 + tau[0] - 0.2e1 * t668 * t674 - 0.2e1 * t667 * dq[2] * t674 - 0.4e1 * t680 * dq[1] * t53 * t62 - _y_ls[23] - 0.4e1 * t680 * t685 * t62 - 0.2e1 * _y_ls[9] * dq[1] * dq[2] * t62 + 0.4e1 * t693 * dq[1] * t96 + 0.2e1 * _y_ls[10] * dq[1] * t685 - 0.4e1 * t700 * dq[2] * t92 - _y_ls[9] * t664 * t62;
	t707 = dq[2] * dq[2];
	t730 = _y_ls[5] * dq[0];
	t731 = t730 * dq[1];
	t732 = t669 * t62;
	t735 = t673 * t53;
	t743 = -_y_ls[9] * t707 * t62 + _y_ls[10] * t664 * t53 + _y_ls[10] * t707 * t53 - 0.2e1 * t693 * dq[1] + 0.2e1 * t700 * dq[2] + 0.2e1 * t700 * dq[1] + _y_ls[4] * t664 * t68 - 0.4e1 * t700 * dq[1] * t92 + 0.4e1 * _y_ls[1] * dq[0] * dq[1] * t68 * t69 + 0.2e1 * t731 * t732 - 0.2e1 * t731 * t735 - 0.2e1 * t730 * dq[2] * t735 - FSIGN(dq[0]) * _y_ls[18] - dq[0] * _y_ls[17];
	t744 = t706 + t743;
	t748 = 0.1000e4 * t190 * _y_ls[14];
	t750 = 0.1000e4 * t285;
	t754 = 0.1000e4 * t74 * t296;
	t756 = 0.1000e4 * t74 * t143;
	t757 = t74 * t159;
	t759 = 0.1000e4 * t127 * t296;
	t761 = 0.1000e4 * t127 * t143;
	t762 = t127 * t159;
	t763 = t190 * t64 + t748 - t284 * t64 - t750 + t74 * t64 + t127 * t64 - t754 - t756 - t757 - t759 - t761 - t762;
	t764 = t763 * t662;
	t765 = g1 * t68;
	t766 = l * l;
	t767 = r * r;
	t768 = l * r;
	t772 = sqrt(t766 + t767 - 0.2e1 * t768 * t68);
	t775 = dq[0] * dq[0];
	t776 = t775 * _y_ls[8];
	t781 = t775 * _y_ls[2];
	t794 = t775 * t53;
	t795 = t62 * _y_ls[7];
	t799 = _y_ls[5] * t772;
	t800 = t799 * t775;
	t804 = dq[2] * D13;
	t808 = t707 * D13;
	t811 = t765 * _y_ls[12] * t772 - t776 * t772 + 0.2e1 * t776 * t772 * t92 + t781 * t772 - 0.2e1 * t781 * t772 * t96 + 0.1000e4 * t768 * t69 * _y_ls[16] - 0.2e1 * t775 * t68 * t69 * _y_ls[1] * t772 + 0.2e1 * t794 * t795 * t772 - t800 * t732 + t800 * t735 - 0.2e1 * t799 * dq[1] * t804 * t8 - t799 * t808 * t8;
	t814 = g1 * t69;
	t817 = _y_ls[6] * t772;
	t818 = t817 * t775;
	t838 = -t799 * t765 * t8 + t799 * t814 * t1 + t818 * t670 + t818 * t674 + 0.2e1 * t817 * dq[1] * t804 * t1 + t817 * t808 * t1 + t817 * t765 * t1 + t817 * t814 * t8 - t69 * _y_ls[11] * t772 - dq[1] * _y_ls[19] * t772 - FSIGN(dq[1]) * _y_ls[20] * t772 - _y_ls[24] * t772;
	t842 = tau[1] + (t811 + t838) / t772;
	t858 = t754 + t756 + t759 + t761 - t190 * t159 + t284 * t159 - 0.1000e4 * t190 * t296 - 0.1000e4 * t190 * t143 + 0.1000e4 * t284 * t296 + 0.1000e4 * t284 * t143 + t137 + 0.1000e4 * t74 * _y_ls[13] + t74 * _y_ls[15] + 0.1000e4 * t128 - t748 + t750 - t757 - t762;
	t859 = t858 * t662;
	t878 = tau[2] + _y_ls[5] * t775 * t735 - dq[2] * _y_ls[21] - FSIGN(dq[2]) * _y_ls[22] + 0.2e1 * t776 * t92 + _y_ls[5] * t664 * t9 - _y_ls[25] + 0.2e1 * t794 * t795 + _y_ls[6] * t775 * t674 - _y_ls[6] * t664 * t2 - t776 - _y_ls[5] * g1 * t62 + _y_ls[6] * g1 * t53;
	_ddq[0] = t48 * t662 * t744 - t764 * t842 - t859 * t878;
	t881 = 0.1000e4 * t90;
	t887 = 0.1000e4 * t9 * _y_ls[6] * _y_ls[14];
	t890 = 0.1000e4 * t2 * _y_ls[5] * _y_ls[14];
	t893 = 0.2000e4 * t70 * _y_ls[2] * _y_ls[14];
	t895 = 0.2000e4 * t74 * t127;
	t899 = 0.2000e4 * t133 * _y_ls[8] * _y_ls[14];
	t900 = 0.1000e4 * t276;
	t904 = 0.1000e4 * t273 * _y_ls[14];
	t906 = 0.1000e4 * t371 * _y_ls[14];
	t907 = t6 + t12 - t881 - t207 * t64 + t371 * t64 - t273 * t64 + t887 + t890 - t893 - t895 + t121 * t64 + t899 + t900 + _y_ls[0] * t3 * _y_ls[15] - t904 + t906;
	t909 = 0.1000e4 * t121 * _y_ls[14];
	t911 = 0.1000e4 * t207 * _y_ls[14];
	t912 = t133 * t64;
	t917 = 0.1000e4 * t59 * t55 * _y_ls[14];
	t918 = t1 * t54;
	t921 = 0.1000e4 * t173 * t918 * _y_ls[14];
	t927 = 0.1000e4 * t59 * t643 * _y_ls[14];
	t929 = 0.1000e4 * t94;
	t930 = t1 * t92;
	t933 = 0.1000e4 * t173 * t930 * _y_ls[14];
	t940 = t133 * _y_ls[14];
	t942 = 0.2000e4 * t178 * t940;
	t944 = 0.2000e4 * t378 * t940;
	t949 = t909 - t911 - 0.2e1 * t378 * t912 + t917 - t921 + t143 * t638 - t296 * t638 - t143 * t258 - t927 + t296 * t258 - t929 + t933 - 0.2e1 * t178 * t912 + 0.2e1 * t133 * _y_ls[8] * t3 * _y_ls[15] - t942 - t944 - 0.2e1 * t70 * _y_ls[2] * t3 * _y_ls[15];
	t953 = t207 * t143;
	t957 = t182 * t296;
	t959 = t182 * t143;
	t962 = t273 * t296;
	t964 = t371 * t296;
	t967 = t133 * t159;
	t970 = t207 * t296;
	t972 = t371 * t143;
	t974 = t92 * t21;
	t975 = t974 * t479;
	t977 = t74 * t284;
	t979 = 0.1000e4 * t953 - _y_ls[0] * r3 * _y_ls[15] - 0.2000e4 * t957 - 0.2000e4 * t959 - t143 * t225 + 0.1000e4 * t962 - 0.1000e4 * t964 + t296 * t225 - t40 + 0.2e1 * t378 * t967 + 0.1000e4 * t970 - t43 - 0.1000e4 * t972 + 0.1000e4 * t975 - 0.1000e4 * t977;
	t980 = t273 * t143;
	t982 = t71 * t296;
	t984 = t357 * t82;
	t988 = t357 * t123;
	t990 = t54 * t21;
	t991 = t990 * t479;
	t993 = t990 * t476;
	t996 = t127 * t284;
	t998 = t74 * t190;
	t1000 = t974 * t476;
	t1004 = t155 * t36 * t133 * _y_ls[6];
	t1009 = 0.1000e4 * t980 + 0.2000e4 * t982 - 0.1000e4 * t984 + t273 * t159 - t371 * t159 - 0.1000e4 * t988 - 0.1000e4 * t991 + 0.1000e4 * t993 - t121 * t159 - 0.1000e4 * t996 + 0.1000e4 * t998 - 0.1000e4 * t1000 + 0.2000e4 * t1004 + t207 * t159 - t296 * t164 + t143 * t164;
	t1017 = t511 * t22 * t133 * _y_ls[5];
	t1027 = t532 * t1 * t133 * t8;
	t1029 = t71 * t143;
	t1031 = t121 * t296;
	t1033 = t121 * t143;
	t1035 = t127 * t190;
	t1039 = t335 * t8 * t133 * t1;
	t1041 = 0.2e1 * t70 * _y_ls[2] * r3 * _y_ls[15] + 0.2000e4 * t1017 + 0.2e1 * t178 * t967 - 0.2e1 * t133 * _y_ls[8] * r3 * _y_ls[15] + 0.2000e4 * t1027 + 0.2000e4 * t1029 - 0.1000e4 * t1031 + t881 - 0.1000e4 * t1033 + 0.1000e4 * t1035 + 0.2000e4 * t1039 - t887 - t890 + t893 + t895;
	t1042 = -t899 - t900 - t31 - t34 - t26 + t904 - t906 - t909 + t911 - t917 + t921 + t927 + t929 - t933 + t942 + t944;
	t1045 = (t979 + t1009 + t1041 + t1042) * t662;
	_ddq[1] = -t764 * t744 + (t907 + t949) * t662 * t842 + t1045 * t878;
	t1059 = t133 * _y_ls[15];
	t1074 = 0.1000e4 * t173 * t930 * _y_ls[13] - 0.2000e4 * t953 + 0.4000e4 * t957 + 0.4000e4 * t959 - 0.2000e4 * t962 + 0.2000e4 * t964 + 0.2000e4 * t39 - 0.2000e4 * t970 - 0.2e1 * t378 * t1059 + 0.2000e4 * t972 - 0.2000e4 * t975 + 0.2000e4 * t977 + t59 * t55 * _y_ls[15] - 0.2000e4 * t980 - 0.4000e4 * t982 + 0.2000e4 * t984 + 0.2000e4 * t988 + 0.2000e4 * t991 - 0.2000e4 * t993 + 0.2000e4 * t996;
	t1100 = t133 * _y_ls[13];
	t1109 = -0.2000e4 * t998 + 0.2000e4 * t1000 - 0.4000e4 * t1004 + t492 - 0.1000e4 * t59 * t643 * _y_ls[13] - 0.1000e4 * t173 * t918 * _y_ls[13] + t2 * t314 + 0.2000e4 * t133 * t366 + 0.1000e4 * t9 * t217 + 0.2e1 * t133 * t384 + t9 * t310 - 0.2000e4 * t70 * t592 + 0.1000e4 * t2 * t298 - 0.2e1 * t70 * t588 - 0.1000e4 * t103 - 0.4000e4 * t1017 - 0.2000e4 * t378 * t1100 + 0.1000e4 * t59 * t55 * _y_ls[13] - t59 * t643 * _y_ls[15] + t371 * _y_ls[15];
	t1138 = -t207 * _y_ls[15] - 0.1000e4 * t273 * _y_ls[13] + 0.1000e4 * t121 * _y_ls[13] - t273 * _y_ls[15] + t121 * _y_ls[15] + 0.1000e4 * t371 * _y_ls[13] - 0.1000e4 * t207 * _y_ls[13] - 0.4000e4 * t1027 - 0.4000e4 * t1029 - t173 * t918 * _y_ls[15] - 0.2000e4 * t178 * t1100 + 0.2000e4 * t1031 - 0.1000e4 * t98 - 0.2e1 * t178 * t1059 + t173 * t930 * _y_ls[15] - t881 + 0.1000e4 * t86 + 0.2000e4 * t1033 - 0.2000e4 * t1035 - 0.4000e4 * t1039;
	t1143 = t887 + t890 - t893 - t895 + t899 + t900 + 0.4000e4 * t30 + 0.2000e4 * t190 * t284 + 0.2000e4 * t25 - t904 + t906 + t909 - t911 + t917 - t921 - t927 - t929 + t933 - t942 - t944;
	_ddq[2] = -t859 * t744 + t1045 * t842 + (t1074 + t1109 + t1138 + t1143) * t662 * t878;
			
	//calculate ddq of last tree axes
	tau4 = (_y_ls2[1*3+0]*dq[3] + _y_ls2[2*3+0]*FSIGN(dq[3]) + _y_ls2[3*3+0]);
	tau5 = (_y_ls2[1*3+1]*dq[4] + _y_ls2[2*3+1]*FSIGN(dq[4]) + _y_ls2[3*3+1]);
	tau6 = (_y_ls2[1*3+2]*dq[5] + _y_ls2[2*3+2]*FSIGN(dq[5]) + _y_ls2[3*3+2]);

	taut[0] = tau[3] - tau4;
	taut[1] = tau[4] - tau5;
	taut[2] = tau[5] - tau6;

	_ddq[3] = taut[0]/_y_ls2[0*3+0];
	_ddq[4] = taut[1]/_y_ls2[0*3+1];
	_ddq[5] = taut[2]/_y_ls2[0*3+2];

	return _ddq;
}
//}

