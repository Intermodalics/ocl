
IF ( OROCOS_TARGET STREQUAL lxrt )

OPTION( BUILD_APCI "Build APCI 2200/1032/1710 drivers for LXRT" OFF )

IF ( BUILD_APCI )

    # This gathers all the .cpp files into the variable 'SRCS'
    FILE( GLOB SRCS [^.]*.cpp )
    FILE( GLOB HPPS [^.]*.hpp )

    GLOBAL_ADD_COMPONENT( orocos-apci ${SRCS} )
    GLOBAL_ADD_INCLUDE( hardware/apci ${HPPS} )
    #GLOBAL_ADD_INCLUDE( hardware/APCI/driver/ driver/jr3_lxrt_common.h )

    #ADD_SUBDIRECTORY( tests )

    SET(APCI1710_SSI_FREQ 100000 CACHE STRING "SSI Clock Frequency.")
    SET(APCI1710_SSI_PROFILE 21 CACHE STRING "SSI profile length")
    SET(APCI1710_SSI_POSITION_BITS 12 CACHE STRING "SSI Position bitlength")
    SET(APCI1710_SSI_TURN_BITS 9 CACHE STRING "SSI Turn bitlength")
    SET(APCI1710_SSI_UPDATE 500 CACHE STRING "SSI encoder reading frequency in Hz")
    SET(APCI1710_INC_COUNTER APCI1710_32BIT_COUNTER CACHE STRING "Counter type. one off APCI1710_32BIT_COUNTER or APCI1710_16BIT_COUNTER")
    SET(APCI1710_INC_MODE APCI1710_DOUBLE_MODE CACHE STRING "Counter mode. one off APCI1710_DOUBLE_MODE, APCI1710_QUADRUPLE_MODE, APCI1710_SIMPLE_MODE, APCI1710_DIRECT_MODE" )
    SET(APCI1710_INC_HYSTERESIS APCI1710_HYSTERESIS_ON CACHE STRING "Counter Hysteresis. one off APCI1710_HYSTERESIS_ON or APCI1710_HYSTERESIS_OFF")

    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/apci-config.h.in ${CMAKE_CURRENT_BINARY_DIR}/apci-config.h)
    INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR})

ENDIF ( BUILD_APCI )

ELSE( OROCOS_TARGET STREQUAL lxrt )

MESSAGE( STATUS "Can not Build APCI drivers with gnulinux target. Use lxrt.")

ENDIF( OROCOS_TARGET STREQUAL lxrt )
